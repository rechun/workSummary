面向对象编程就是将你的需求抽象成一个对象,让针对这些对象分析其特征(属性)与动作

这个对象我们称之为类。

面向对象思想其中有一个特点就是封装。把需要的功能放在一个对象里。

对于js这种解释性的弱类型语言，没有经典强类型语言中的class关键字实现类的封装。

js中是通过特性模仿实现的,这带来了极高的灵活性。

================================2.2 封装=====================================

创建一个类
  在函数内部通过对this变量添加属性或者方法来实现对类添加属性或方法
var Book = function(id,bookname,price){
  this.id = id;
  this.bookname = bookname;
  this.price = price;
  
}
  通过在类的原型上添加属性和方法
  
  1.为原型对象属性赋值
  
  Book.prototype.display = function(){
      //展示这本书
  }
  
  2.将对象赋值给类的原型对象
  Book.prototype = {
    display:function(){
      //  展示这本书
    }
  }
  
  我们将所需要的方法和属性都封装在我们抽象的Book类
  
  使用的时候需要用new 关键字来实例化创建新的对象
  
  var book = new Book(10,'javascript设计模式',50);
  
  
  
  
  通过this添加的属性、方法是在当前对象上添加的。
  js是一种基于原型prototype的语言
  每创建一个对象时候，他都有一个原型prototype用于指向其基础的属性、方法。
  
  通过prototype继承的方法并不是对象自身的。
  在使用这些方法时，需要通过prototype一级一级查找来得到。
  
  
  通过this定义的属性或方法是该对象自身拥有的。
  
  constructor
  
  constructor是一个属性，当创建一个函数或者对象时，都会为其创建一个原型对象。
  
  在prototype对象中，又会像函数中创建this一样创建一个constructor属性。
  
  constructor属性指向的就是拥有整个原型对象的函数或对象。
  
  
  一个
  从
  
