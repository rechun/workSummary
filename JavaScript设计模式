OOP（Object-oriented programming） 面向对象编程

是一种程序设计范型，它将对象作为程序的基本单元，将程序和数据封装其中,
以提高程序的重用性/灵活性/扩展性.


================================ 1.3 ==============================
将对象收编变量 
var CheckObject = {
  checkName:function(){
    //验证姓名
  },
  checkEmail:function(){
  //验证邮箱
  },
  checkPassword:function(){
  //验证密码
  }
}
将所有的函数作为checkObject对象的方法，这样我们就只有一个对象。

================================ 1.4 ==============================

对象的另一种形式
var checkObject = function (){};
checkObject.checkName = function(){
  //验证姓名
}
checkObject.checkEmail = function(){
  //验证邮箱
}
checkObject.checkPassword = function(){
  //验证密码
}
这个对象在用new 关键字创建新的对象是,新创建的对象是不能继承这些方法的.

================================ 1.5 ==============================

var checkObject = function(){
  return {
      checkName :function(){
        //验证姓名
      },
      checkEmail:function(){
        //验证邮箱
      },
      checkPssword:function(){
        //验证密码
      }
    }
}

每次调用这个函数时都返回一个新对象.

================================ 1.6 ==============================
  类也可以
  
  var checkObject = function (){
    this.checkName = function(){
      //验证姓名
    },
    this.checkEmail = function(){
      //验证邮箱
    },
    this.checkPassword = function(){
      //验证密码
    }
  }
  var a = new checkObject();
  a.checkEmail();
